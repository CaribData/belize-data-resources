name: CaribData Open Data — Build & Release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * 1"
  push:
    branches: [ "main" ]
    tags:
      - "v*"
      - "od-*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: pip install -r requirements.txt
      - name: Build datasets (retry up to 3x)
        env:
          CARIBDATA_HTTP_TIMEOUT: "90"
          CARIBDATA_HTTP_RETRIES: "6"
          CARIBDATA_HTTP_BACKOFF: "0.8"
        run: |
          set -e
          for i in 1 2 3; do
            echo "Attempt $i ..."
            if python scripts/build_wb_fao.py; then
              echo "Build succeeded on attempt $i"; break
            fi
            [ "$i" -eq 3 ] && { echo "Build failed after 3 attempts"; exit 1; }
            sleep $((i*30))
          done
      - name: Data quality report
        run: python scripts/generate_quality_report.py || true
      - name: Upload build artifact (for downstream jobs)
        uses: actions/upload-artifact@v4
        with:
          name: data-package
          path: |
            data/
            catalog.yml

  publish-pages-data:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/od-')
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: ghp
          fetch-depth: 0

      - name: Download built data
        uses: actions/download-artifact@v4
        with:
          name: data-package
          path: pkg

      - name: Sanity check artifact contents
        run: |
          set -euo pipefail
          echo "Artifact files count: $(find pkg -type f | wc -l)"
          CSVS=$(find pkg/data -type f -name "*.csv" | wc -l || echo 0)
          echo "CSV files found: ${CSVS}"
          if [ "${CSVS}" -eq 0 ]; then
            echo "ERROR: No CSVs in artifact (pkg/data). Aborting Pages publish."
            exit 1
          fi

      - name: Publish to gh-pages/data/<TAG>/
        run: |
          set -euo pipefail
          mkdir -p "ghp/data/${TAG}"
          rsync -a --delete "pkg/data/" "ghp/data/${TAG}/"

          # Write tag index + latest marker
          ts="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          printf '{\n  "tag": "%s",\n  "published_at": "%s"\n}\n' "$TAG" "$ts" > "ghp/data/${TAG}/_index.json"
          printf '{\n  "tag": "%s",\n  "published_at": "%s"\n}\n' "$TAG" "$ts" > "ghp/data/latest.json"

          # Ensure Pages doesn’t Jekyll-filter our /data tree
          touch ghp/.nojekyll

          echo "DEBUG: staged path counts"
          echo "files: $(find ghp/data/${TAG} -type f | wc -l)"
          echo "csvs : $(find ghp/data/${TAG} -type f -name "*.csv" | wc -l)"

          cd ghp
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add -A
          git status --porcelain
          git commit -m "Publish Open Data for ${TAG} to Pages" || echo "No changes to commit"
          git push

      - name: Upload Pages snapshot (debug)
        uses: actions/upload-artifact@v4
        with:
          name: pages-snapshot-${{ env.TAG }}
          path: |
            ghp/data/${{ env.TAG }}/
            ghp/data/latest.json

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/od-')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: data-package
          path: data-package

      - name: Verify artifact (debug)
        run: |
          set -euo pipefail
          echo "files:" $(find data-package -type f | wc -l)
          echo "csvs :" $(find data-package -type f -name "*.csv" | wc -l)

      - name: Assemble distributable (only data/ + catalog.yml)
        run: |
          set -euo pipefail
          rm -rf stage dist
          mkdir -p stage dist
          rsync -a data-package/data/ stage/data/
          cp -f data-package/catalog.yml stage/catalog.yml

      - name: Package ZIP + small assets + checksums
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF#refs/tags/}"
          ZIP="open-data-caribbean_${TAG}.zip"
          (cd stage && zip -r "../dist/${ZIP}" . >/dev/null)
          cp stage/data/world_bank/_dictionary.csv dist/world_bank_dictionary.csv || true
          cp stage/data/world_bank/_manifest.json  dist/world_bank_manifest.json  || true
          cp stage/data/faostat_fbs/_manifest.json dist/faostat_manifest.json     || true
          cp stage/data/_freshness.json            dist/freshness.json            || true
          cp stage/data/_quality_report.csv        dist/quality_report.csv        || true
          cp stage/data/_quality_report.json       dist/quality_report.json       || true
          (cd dist && sha256sum *.csv *.json *.zip 2>/dev/null | tee SHA256SUMS.txt || true)

      - name: Create/Update GitHub Release (attach data assets)
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/open-data-caribbean_*.zip
            dist/world_bank_dictionary.csv
            dist/world_bank_manifest.json
            dist/faostat_manifest.json
            dist/freshness.json
            dist/quality_report.csv
            dist/quality_report.json
            dist/SHA256SUMS.txt
          body: |
            CaribData Open Data — automated build (data-only assets).
            NOTE: Ignore the auto-added “Source code” zips — they contain repository files, not data.
