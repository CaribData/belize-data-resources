name: CaribData Messy Data — Release

on:
  push:
    tags:
      - "md-*"     # e.g., md-v2025.08.22 or md-v2025-08-22
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to create (leave blank to auto md-vYYYY.MM.DD)"
        required: false
        default: ""
      title:
        description: "Release title (optional)"
        required: false
        default: ""
      prerelease:
        description: "Mark as pre-release"
        type: boolean
        required: false
        default: false

permissions:
  contents: write

concurrency:
  group: messy-release
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Build messy bundle
        env:
          CARIBDATA_HTTP_TIMEOUT: "120"
          CARIBDATA_HTTP_RETRIES: "6"
          CARIBDATA_HTTP_BACKOFF: "0.8"
        run: python scripts/fetch_messy.py

      - name: Compute tag/title/prerelease
        id: meta
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ inputs.tag }}"
            if [ -z "$TAG" ]; then
              TAG="md-v$(date -u +%Y.%m.%d)"
            fi
            TITLE="${{ inputs.title }}"
            if [ -z "$TITLE" ]; then
              TITLE="CaribData Messy Data (Belize) — $(date -u +%F)"
            fi
            PRERELEASE="${{ inputs.prerelease && 'true' || 'false' }}"
          else
            REF="${GITHUB_REF#refs/tags/}"
            TAG="$REF"
            DATE_FROM_TAG=$(echo "$REF" | sed -nE 's/md-v([0-9]{4})[-.]([0-9]{2})[-.]([0-9]{2}).*/\1-\2-\3/p')
            if [ -z "$DATE_FROM_TAG" ]; then DATE_FROM_TAG="$(date -u +%F)"; fi
            TITLE="CaribData Messy Data (Belize) — $DATE_FROM_TAG"
            PRERELEASE="false"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT

      - name: Create annotated tag (manual runs only)
        if: github.event_name == 'workflow_dispatch'
        env:
          TAG: ${{ steps.meta.outputs.tag }}
        run: |
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists; reusing."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag -a "$TAG" -m "Automated messy data release $TAG"
            git push origin "$TAG"
          fi

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.title }}
          prerelease: ${{ steps.meta.outputs.prerelease }}
          files: |
            data/messy/belize-messy-bundle.zip
            data/messy/_manifest.json
            data/messy/_report.json
            data/messy/_dataset_card.md
