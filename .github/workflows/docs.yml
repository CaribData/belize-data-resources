name: Docs

on:
  push:
    branches: [ "main" ]
    paths:
      - "docs/**"
      - "mkdocs.yml"
  workflow_dispatch:
  workflow_run:
    workflows: ["CaribData Open Data â€” Build & Release"]
    types: [completed]

permissions:
  contents: write
  actions: read

jobs:
  build-deploy:
    if: github.event_name != 'workflow_run' || (github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install MkDocs + deps
        run: |
          pip install -r requirements.txt
          mkdocs --version

      - name: Show mkdocs.yml (debug)
        run: |
          echo "----- mkdocs.yml -----"
          cat mkdocs.yml
          echo "----------------------"

      # Optional: pull latest data freshness from last successful build artifact
      - name: Download latest data-package artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: build-release.yml
          workflow_conclusion: success
          name: data-package
          path: data-package
          if_no_artifact_found: ignore

      - name: Inject freshness into docs (if available)
        run: |
          set -e
          FRESH_PATH="data-package/data/_freshness.json"
          if [ -f "$FRESH_PATH" ]; then
            python - <<'PY'
import json, re, pathlib
root = pathlib.Path(".")
fresh = json.loads((root/"data-package"/"data"/"_freshness.json").read_text())
stamp = fresh.get("generated_at","")
p = root/"docs"/"index.md"
txt = p.read_text()
block = f"<!--FRESHNESS-->Last updated: {stamp} UTC<!--/FRESHNESS-->"
txt = re.sub(r"<!--FRESHNESS-->.*?<!--/FRESHNESS-->", block, txt, flags=re.S)
p.write_text(txt)
print(block)
PY
          else
            echo "No freshness file found; skipping injection."
          fi

      - name: Build site
        run: mkdocs build --strict

      - name: List built site (debug)
        run: |
          echo "Built files in ./site:"
          find site -maxdepth 2 -type f | head -n 50
          echo "Grepping title from homepage:"
          grep -i "<title>" site/index.html || true

      - name: Deploy to GitHub Pages (force clean)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          force_orphan: true
